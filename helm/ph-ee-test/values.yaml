ph-ee-engine:

  camunda-platform:
    global:
      zeebe: "zeebe-zeebe"
    zeebe:
      broker:
        contactpoint: "zeebe-zeebe-gateway:26500"
    operate:
      enabled: true
      image:
        repository: camunda/operate
        tag: 8.1.1
      global:
        elasticsearch:
          host: "ph-ee-elasticsearch"
          clusterName: "ph-ee-elasticsearch"
      ingress:
        enabled: false
        className: "nginx"
        path: /
        host: operate2.sandbox.fynarfin.io
        tls:
          enabled: true

  elasticsearch:
    enabled: true
    replicas: 1
    imageTag: 7.16.3
    minimumMasterNodes: 1
    esConfig:
      elasticsearch.yml: |
        xpack.security.enabled: false
        xpack.security.transport.ssl.enabled: false
        xpack.security.transport.ssl.verification_mode: certificate
        xpack.security.transport.ssl.keystore.path: /usr/share/elasticsearch/config/certs/elastic-certificates.p12
        xpack.security.transport.ssl.truststore.path: /usr/share/elasticsearch/config/certs/elastic-certificates.p12
        xpack.security.http.ssl.enabled: false
        xpack.security.http.ssl.truststore.path: /usr/share/elasticsearch/config/certs/elastic-certificates.p12
        xpack.security.http.ssl.keystore.path: /usr/share/elasticsearch/config/certs/elastic-certificates.p12
    secretMounts:
      - name: elastic-certificates
        secretName: elastic-certificates
        path: /usr/share/elasticsearch/config/certs
    extraEnvs:
      - name: ELASTIC_PASSWORD
        valueFrom:
          secretKeyRef:
            name: elastic-credentials
            key: password

    #Single Node Solution
    clusterHealthCheckParams: "wait_for_status=yellow&timeout=100s"
    protocol: http
    master:
      readinessProbe:
        httpGet:
          allow-insecure: true
          username: elastic
          password: "{{ .Env.ELASTIC_PASSWORD }}"
          path: /_cluster/health?wait_for_status=yellow&timeout=5s
          port: 9200
        initialDelaySeconds: 30
    data:
      readinessProbe:
        httpGet:
          allow-insecure: true
          username: elastic
          password: "{{ .Env.ELASTIC_PASSWORD }}"
          path: /_cluster/health?wait_for_status=yellow&timeout=5s
          port: 9200
        initialDelaySeconds: 30



    # Shrink default JVM heap.
    esJavaOpts: "-Xmx512m -Xms512m"

    # Allocate smaller chunks of memory per pod.
    resources:
      requests:
        cpu: "100m"
        memory: "1024M"
      limits:
        cpu: "1000m"
        memory: "1024M"
    volumeClaimTemplate:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "gp2"
      resources:
        requests:
          storage: 10Gi

  kibana:
    readinessProbe:
      initialDelaySeconds: 45
      timeoutSeconds: 15
      successThreshold: 1
    enabled: true
    protocol: http
    imageTag: 7.16.3
    kibanaConfig:
      kibana.yml: |
        monitoring.enabled: false
        xpack.encryptedSavedObjects.encryptionKey: 5f4dcc3b5aa765d61d8327deb882cf99
        server.ssl:
          enabled: true
          key: /usr/share/kibana/config/certs/elastic-certificate.pem
          certificate: /usr/share/kibana/config/certs/elastic-certificate.pem
        xpack.security.encryptionKey: ${KIBANA_ENCRYPTION_KEY}
        elasticsearch.ssl:
          certificateAuthorities: /usr/share/kibana/config/certs/elastic-certificate.pem
          verificationMode: certificate
    secretMounts:
      - name: elastic-certificate-pem
        secretName: elastic-certificate-pem
        path: /usr/share/kibana/config/certs
    extraEnvs:
      - name: 'ELASTICSEARCH_USERNAME'
        valueFrom:
          secretKeyRef:
            name: elastic-credentials
            key: username
      - name: 'ELASTICSEARCH_PASSWORD'
        valueFrom:
          secretKeyRef:
            name: elastic-credentials
            key: password
      - name: 'KIBANA_ENCRYPTION_KEY'
        valueFrom:
          secretKeyRef:
            name: kibana
            key: encryptionkey
    ingress:
      enabled: true
      className: "nginx"
      pathtype: ImplementationSpecific
      annotations: {}
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true" 
      hosts:
        - host: analytics2.sandbox.fynarfin.io
          paths:
            - path: /
      #tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

  operations:
    enabled: true

  operationsmysql:
    auth:
      database: "tenants"
      username: "mifos"
      password: "password"
      rootPassword: "ethieTieCh8ahv"
    initdbScripts:
      setup.sql: |-
        CREATE DATABASE messagegateway;
        CREATE DATABASE `rhino`;
        CREATE DATABASE `gorilla`;
        GRANT ALL PRIVILEGES ON `rhino`.* TO 'mifos';
        GRANT ALL PRIVILEGES ON `gorilla`.* TO 'mifos';
        GRANT ALL ON *.* TO 'root'@'%';
        GRANT ALL PRIVILEGES ON messagegateway.* TO 'mifos';

  ph_ee_connector_ams_mifos:
    enabled: false
    

  ph_ee_connector_mojaloop:
    enabled: false

  kafka:
    enabled: true
    image: "spotify/kafka"
    nodePort: "30097"
    advertised:
      host: "kafka"
      port: "9092"
    limits:
      cpu: "500m"
      memory: "1G"
    requests:
      cpu: "100m"
      memory: "512M"
    deployment:
      annotations:
        deployTime: "{{ .Values.deployTime }}"

  channel:
    enabled: true
    image: "419830066942.dkr.ecr.ap-south-1.amazonaws.com/phee-channel"
    imageTag: v1.5.1
    SPRING_PROFILES_ACTIVE: "bb"
    hostname: "channel2.sandbox.fynarfin.io"
    stub_hostname: "channel-gsma2.sandbox.fynarfin.io"
    DFSPIDS: "rhino,gorilla"
    zeebe:
      broker:
        contactpoint: "zeebe-zeebe-gateway:26500"
    operations:
      url: "http://ops-bk2.sandbox.fynarfin.io/api/v1"
      authEnabled: false
    tenantPrimary:
      clientId: "mifos"
      clientSecret: "password"
      tenant: "rhino"
    tenantSecondary:
      clientId: "mifos"
      clientSecret: "password"
      tenant: "gorilla"
    limits:
      cpu: "500m"
      memory: "512M"
    requests:
      cpu: "100m"
      memory: "256M"
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
      tls:
        - secretName: sandbox-secret
      hosts:
        - host: channel2.sandbox.fynarfin.io
          paths:
            - path: "/"
              backend:
                service:
                  name: ph-ee-connector-channel
                  port:
                    number: 80
              stub_backend:
                service:
                  name: ph-ee-connector-channel
                  port:
                    number: 82
#    ingress:
#      enabled: true
#      className: "nginx"
#      annotations:
#        kubernetes.io/ingress.class: "nginx"
#      tls:
#        - secretName: sandbox-secret
#      path: "/"
#      backend:
#        service:
#          name: ph-ee-connector-channel
#          port:
#            number: 80
#      stub_backend:
#        service:
#          name: ph-ee-connector-channel
#          port:
#            number: 82
    deployment:
      annotations:
        deployTime: "{{ .Values.deployTime }}"

  operations_app:
    enabled: true
    image: "419830066942.dkr.ecr.ap-south-1.amazonaws.com/ph-ee-ops-bk"
    imageTag: latest
    SPRING_PROFILES_ACTIVE: "bb"
    tenants: "rhino,gorilla"
    hostname: "ops-bk2.sandbox.fynarfin.io"
    datasource:
      username: "mifos"
      password: "password"
      host: "operationsmysql"
      port: 3306
      schema: "tenants"
    limits:
      cpu: "500m"
      memory: "512M"
    requests:
      cpu: "100m"
      memory: "256M"
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
      tls:
        - secretName: sandbox-secret
      hosts:
        - host: ops-bk2.sandbox.fynarfin.io
          paths:
            - path: "/"
              backend:
                service:
                  name: ph-ee-operations-app
                  port:
                    number: 80
#    ingress:
#      enabled: true
#      annotations:
#        kubernetes.io/ingress.class: "nginx"
#      path: "/"
#      backend:
#        service:
#          name: ph-ee-operations-app
#          port:
#            number: 80
    deployment:
      annotations:
        deployTime: "{{ .Values.deployTime }}"

  operations_web:
    enabled: true
    image: "419830066942.dkr.ecr.ap-south-1.amazonaws.com/phee-ops-web"
    imageTag: latest
    SPRING_PROFILES_ACTIVE: "bb"
    hostname: "ops2.sandbox.fynarfin.io"
    webhost: "ops2.sandbox.fynarfin.io"
    limits:
      cpu: "500m"
      memory: "512M"
    requests:
      cpu: "100m"
      memory: "256M"
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
      tls:
        - secretName: sandbox-secret
      hosts:
        - host: ops2.sandbox.fynarfin.io
          paths:
            - path: "/"
              backend:
                service:
                  name: ph-ee-operations-web
                  port:
                    number: 4200
#    ingress:
#      className: "nginx"
#      enabled: true
#      annotations:
#        kubernetes.io/ingress.class: "nginx"
##        konghq.com/plugins: request-transformer,oidc,cors
#      path: "/"
#      backend:
#        service:
#          name: ph-ee-operations-web
#          port:
#            number: 4200

  identity:
    hostname: "ops-bk2.sandbox.fynarfin.io"

  ph_ee_connector_gsma:
    enabled: false

  ph_ee_connector_slcb:
    enabled: false

  mpesa:
    enabled: false
    

  roster_connector:
    enabled: false
    

  paygops_connector:
    enabled: false
    

  notifications:
    enabled: false
    

  connector_bulk:
    enabled: true
    image: "419830066942.dkr.ecr.ap-south-1.amazonaws.com/phee-bulk-processor"
    SPRING_PROFILES_ACTIVE: "bb"
    imageTag: latest
    tenant: "rhino,gorilla"
    hostname: "bulk-connector2.sandbox.fynarfin.io"
    aws:
      region: "us-east-2"
      access_key: "AKIAX32JM37TZOJ5AKFB"
      secret_key: "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"
    operations_app:
      contactpoint: "https://ops-bk2.sandbox.fynarfin.io/"
      endpoints:
        batch_transaction: "/api/v1/batch/transactions"
    limits:
      cpu: "500m"
      memory: "512M"
    requests:
      cpu: "100m"
      memory: "256M"
    ingress:
      enabled: true
      className: "kong"
      annotations: 
        kubernetes.io/ingress.class: "kong"
        konghq.com/plugins: request-transformer,oidc,cors
      tls:
        - secretName: sandbox-secret
      path: "/"
      backend:
        service:
          name: ph-ee-connector-bulk
          port:
            number: 80
    deployment:
      annotations:
        deployTime: "{{ .Values.deployTime }}"
        
  zeebe_ops:
    enabled: true
    image: "419830066942.dkr.ecr.ap-south-1.amazonaws.com/phee-zeebe-ops"
    imageTag: latest
    hostname: "zeebeops2.sandbox.fynarfin.io"
    zeebe_broker_contactpoint: "zeebe-zeebe-gateway:26500"
    elasticsearch_contactpoint: "ph-ee-elasticsearch:9200"
    tenants: "rhino,gorilla"
    elasticsearch_sslverification: false
    elasticsearch_security_enabled: false
    limits:
      cpu: "500m"
      memory: "512M"
    requests:
      cpu: "100m"
      memory: "256M"
#    ingress:
#      enabled: true
#      annotations:
#        kubernetes.io/ingress.class: "nginx"
#      path: "/"
#      backend:
#        service:
#          name: ph-ee-zeebe-ops
#          port:
#            number: 80
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
      tls:
        - secretName: sandbox-secret
      hosts:
        - host: zeebeops2.sandbox.fynarfin.io
          paths:
            - path: "/"
              backend:
                service:
                  name: ph-ee-zeebe-ops
                  port:
                    number: 80
    deployment:
      annotations:
        deployTime: "{{ .Values.deployTime }}"

  messagegateway:
    enabled: false

  importer_es:
    enabled: true
    image: "419830066942.dkr.ecr.ap-south-1.amazonaws.com/ph-es-importer"
    imageTag: latest
    elasticsearch_sslverification: false
    elasticsearch_security_enabled: false
    reporting:
      enabled: true
      fields:
        amount: true
        accountId: true
        errorDescription: true
        externalId: true
        phoneNumber: true
        processInstanceKey: true
        timestamp: true

    limits:
      cpu: "500m"
      memory: "512M"
    requests:
      cpu: "100m"
      memory: "256M"

  importer_rdbms:
    enabled: true
    image: "419830066942.dkr.ecr.ap-south-1.amazonaws.com/phee-importer-rdbms"
    imageTag: latest
    LOGGING_LEVEL_ROOT: "DEBUG"
    limits:
      cpu: "500m"
      memory: "512M"
    requests:
      cpu: "100m"
      memory: "256M"
    datasource:
      username: "mifos"
      password: "password"
      host: "operationsmysql"
      port: 3306
      schema: "tenants"
  
  integration_test:
    enabled: true
    replicas: 1
    image: "419830066942.dkr.ecr.ap-south-1.amazonaws.com/phee-integration-test"
    imageTag: latest
    imagePullPolicy: "Always"
    limits:
      cpu: "500m"
      memory: "3Gi"
    requests:
      cpu: "100m"
      memory: "2Gi"
    operations_app:
      contactpoint: "https://ops-bk2.sandbox.fynarfin.io"
    bulk_processor:
      contactpoint: "https://bulk-connector2.sandbox.fynarfin.io"
    channel_connector:
      contactpoint: "https://channel2.sandbox.fynarfin.io"
    kafka:
      brokers: "kafka:9092"
      topics: "zeebe-export"
      consumerTimeoutMs: "300000"
    zeebe_operations:
      contactpoint: "https://zeebeops2.sandbox.fynarfin.io"
      no_of_workflows: "100"
      thread-count: "20"
    max_retry_count: "5"
    retry_intervals: "15000"
    defaults:
      tenant: "gorilla"
      authorization: "Basic bWlmb3M6cGFzc3dvcmQ="
    channel:
      base_url: "https://channel2.sandbox.fynarfin.io"
    loan:
      base_url: "https://fynams2.sandbox.fynarfin.io"
    savings:
      base_url: "https://fynams2.sandbox.fynarfin.io"
    gradle:
      command: "./gradlew cucumberCli -P tags=@ZeebeExport;"

  wildcardhostname: "*.sandbox.fynarfin.io"

  tls: ""

  keycloak:
    enabled: false

  kong:
    enabled: false

  redis:
    enabled: false
  
zeebe-operate:
  ingress:
    enabled: true
    hostname: "zeebeoperate2.sandbox.fynarfin.io"
    annotations:
      kubernetes.io/ingress.class: "nginx"
    path: "/"
    backend:
      service:
        name: "zeebe-operate"
        port:
          number: 80


