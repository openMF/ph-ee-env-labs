version: 2.1
orbs:
  slack: circleci/slack@4.12.5
  helm: circleci/helm@2.0.1
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
  mifos-orb: mifos/docker-image-availability-check-and-upgrade@1.0.0
jobs:
  build:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    environment:
      TERM: dumb
    steps:
      - checkout
      - run: rm -f helm/g2p-sandbox-fynarfin-SIT/Chart.lock helm/g2p-sandbox-fynarfin-SIT/requirements.lock helm/g2p-sandbox-fynarfin-SIT/charts/*
      - helm/install-helm-client:
          version: "v3.8.2"
      # - run: "sed -i '12s/.*/version: 0.0.0/' helm/g2p-sandbox-fynarfin-SIT/Chart.yaml"
      - run:
          name: build-and-host-g2p-fynarfin-sit
          environment:
            JIRA_STORY: ''
            JIRA_STORY_DIR: ''
          command: |
            if [ "$CIRCLE_BRANCH" != "master" ]; then
                PR_NUMBER=$(basename $CIRCLE_PULL_REQUEST)
                PR_TITLE=$(curl -sSL "https://api.github.com/repos/openmf/$CIRCLE_PROJECT_REPONAME/pulls/$PR_NUMBER" | jq -r '.title')
                JIRA_STORY=-$(echo $PR_TITLE | cut -d "[" -f2 | cut -d "]" -f1 | tr '[A-Z]' '[a-z]')
                if [ -z "$JIRA_STORY" ]; then echo "Invalid PR title" && exit 1; else echo "Ticket NO: $JIRA_STORY" && JIRA_STORY_DIR=$(echo /jira-story-version); fi
                echo Charts will save in https://fynarfin.io/images$JIRA_STORY_DIR
            fi
            CHART_URL="https://fynarfin.io/images$JIRA_STORY_DIR/ph-ee-g2psandbox-0.0.0$JIRA_STORY"
            if curl --output /dev/null --silent --head --fail "$CHART_URL"; then
              sed -i "11s@^ *repository:.*\$@  repository: $CHART_URL@" helm/g2p-sandbox-fynarfin-SIT/Chart.yaml
              sed -i "12s@^ *version:.*\$@  version: 0.0.0$JIRA_STORY@" helm/g2p-sandbox-fynarfin-SIT/Chart.yaml
              echo "chart used: < $CHART_URL >"
            else
              CHART_URL="https://fynarfin.io/images/ph-ee-g2psandbox-0.0.0"
              echo "chart used: < $CHART_URL >"
            fi
            sed -i "6s/.*/version: 0.2.0$JIRA_STORY/" helm/g2p-sandbox-fynarfin-SIT/Chart.yaml
            cat helm/g2p-sandbox-fynarfin-SIT/Chart.yaml
            helm dep up helm/g2p-sandbox-fynarfin-SIT
            helm package helm/g2p-sandbox-fynarfin-SIT
            helm repo index .
            echo "$CERT_FILE" | base64 --decode > b64encoded.pem
            chmod 400 b64encoded.pem
            ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mkdir -p /apps/apache-tomcat-7.0.82/webapps/ROOT/images$JIRA_STORY_DIR/ph-ee-g2psandbox-fynarfin$JIRA_STORY
            scp -o StrictHostKeyChecking=No -i b64encoded.pem index.yaml ph-ee-g2psandbox-fynarfin-0.2.0$JIRA_STORY.tgz ec2-user@13.233.68.128:~/
            ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mv -t /apps/apache-tomcat-7.0.82/webapps/ROOT/images$JIRA_STORY_DIR/ph-ee-g2psandbox-fynarfin$JIRA_STORY index.yaml ph-ee-g2psandbox-fynarfin-0.2.0$JIRA_STORY.tgz

  upgrade-g2psandbox-helm-chart:
    docker:
      - image: cimg/python:3.10
    environment:
      TERM: dumb
    steps:
      - mifos-orb/docker-image-availability-check-and-upgrade:
          namespace: paymenthub
          chart-base-url: https://fynarfin.io/images
          chart-name: ph-ee-g2psandbox-fynarfin
          chart-version: 0.2.0
          #          chart: "https://fynarfin.io/images/ph-ee-g2psandbox-fynarfin/ph-ee-g2psandbox-fynarfin-0.2.0.tgz"
          release-name: g2p-sandbox
          #          add-repo: "https://fynarfin.io/images/ph-ee-g2psandbox-fynarfin"
          cluster-name: "sit"
          aws-region: "$REGION"
          service-file-path: https://raw.githubusercontent.com/openMF/ph-ee-env-labs/master/.circleci/services.txt

  host-g2-sandbox-security-fynarfin-chart:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    environment:
      TERM: dumb
    steps:
      - checkout
      - run: rm -f helm/g2p-sandbox-security-fynarfin-SIT/Chart.lock helm/g2p-sandbox-security-fynarfin-SIT/requirements.lock helm/g2p-sandbox-security-fynarfin-SIT/charts/*
      - helm/install-helm-client:
          version: "v3.8.2"
      - run:
          name: build-and-host-g2p-sandbox-security
          environment:
            JIRA_STORY: ''
            JIRA_STORY_DIR: ''
          command: |
            if [ "$CIRCLE_BRANCH" != "master" ]; then
              PR_NUMBER=$(basename $CIRCLE_PULL_REQUEST)
              PR_TITLE=$(curl -sSL "https://api.github.com/repos/openmf/$CIRCLE_PR_REPONAME/pulls/$PR_NUMBER" | jq -r '.title')
              JIRA_STORY=-$(echo $PR_TITLE | cut -d "[" -f2 | cut -d "]" -f1 | tr '[A-Z]' '[a-z]')
              if [ -z "$JIRA_STORY" ]; then echo "Invalid PR title" && exit 1; else echo "Ticket NO: $JIRA_STORY" && JIRA_STORY_DIR=$(echo /jira-story-version); fi
            fi
            CHART_URL="https://fynarfin.io/images$JIRA_STORY_DIR/ph-ee-g2psandbox-security$JIRA_STORY"
            if curl --output /dev/null --silent --head --fail "$CHART_URL"; then
              sed -i "10s@^ *repository:.*\$@  repository: $CHART_URL@" helm/g2p-sandbox-security-fynarfin-SIT/Chart.yaml
              sed -i "11s@^ *version:.*\$@  version: 0.0.0$JIRA_STORY@" helm/g2p-sandbox-security-fynarfin-SIT/Chart.yaml
              echo "chart used: < $CHART_URL >"
            else
              CHART_URL="https://fynarfin.io/images/ph-ee-g2psandbox-security"
              echo "chart used: < $CHART_URL >"
            fi
            sed -i "5s/.*/version: 0.0.0$JIRA_STORY/" helm/g2p-sandbox-security-fynarfin-SIT/Chart.yaml
            cat helm/g2p-sandbox-security-fynarfin-SIT/Chart.yaml
            # - run: "sed -i '4s/.*/version: 0.0.0-SNAPSHOT/' helm/g2p-sandbox-security/requirements.yaml"
            # SED & replace dependency with 0.0.0
            helm dep up helm/g2p-sandbox-security-fynarfin-SIT
            helm package helm/g2p-sandbox-security-fynarfin-SIT
            helm repo index .
            echo "$CERT_FILE" | base64 --decode > b64encoded.pem
            chmod 400 b64encoded.pem
            ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mkdir -p /apps/apache-tomcat-7.0.82/webapps/ROOT/images$JIRA_STORY_DIR/ph-ee-g2psandbox-security-fynarfin$JIRA_STORY
            scp -o StrictHostKeyChecking=No -i b64encoded.pem index.yaml ph-ee-g2psandbox-security-fynarfin-0.0.0$JIRA_STORY.tgz ec2-user@13.233.68.128:~/
            ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mv -t /apps/apache-tomcat-7.0.82/webapps/ROOT/images$JIRA_STORY_DIR/ph-ee-g2psandbox-security-fynarfin$JIRA_STORY index.yaml ph-ee-g2psandbox-security-fynarfin-0.0.0$JIRA_STORY.tgz
  upgrade-g2psandbox-security-helm-chart:
    docker:
      - image: cimg/python:3.10
    steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: "sit"
          aws-region: "$REGION"
      - kubernetes/install-kubectl
      - run: |
          if ! kubectl get ns ph-infrastructure > /dev/null 2>&1; then
              kubectl create namespace ph-infrastructure
          fi
      - mifos-orb/docker-image-availability-check-and-upgrade:
          namespace: ph-infrastructure
          chart-base-url: https://fynarfin.io/images
          chart-name: ph-ee-g2psandbox-security-fynarfin
          chart-version: 0.0.0
          #          chart: "https://fynarfin.io/images/ph-ee-g2psandbox-security-fynarfin/ph-ee-g2psandbox-security-fynarfin-0.0.0.tgz"
          #          add-repo: "https://fynarfin.io/images/ph-ee-g2psandbox-security-fynarfin"
          release-name: g2p-sandbox-security
          cluster-name: "sit"
          aws-region: "$REGION"
          service-file-path: https://raw.githubusercontent.com/openMF/ph-ee-env-labs/master/.circleci/services.txt

  host-dpga-compliance-barebone-chart:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    environment:
      TERM: dumb
    steps:
      - checkout
      - run: |
          if [[ -n $(git show --name-only $CIRCLE_SHA1 | grep "^helm/dpga-compliance-barebone/") ]]; then
            echo "Directory has changed. Running the job."
          else
            echo "Directory has not changed. Skipping the job."
            circleci step halt
          fi
      - run: rm -f helm/dpga-compliance-barebone/Chart.lock helm/dpga-compliance-barebone/charts/*
      - helm/install-helm-client:
          version: "v3.8.2"
      - run:
          name: host-dpga-compliance-barebone-chart
          environment:
            JIRA_STORY: ''
            JIRA_STORY_DIR: ''
          command: |
            if [ "$CIRCLE_BRANCH" != "master" ]; then
              PR_NUMBER=$(basename $CIRCLE_PULL_REQUEST)
              PR_TITLE=$(curl -sSL "https://api.github.com/repos/openmf/$CIRCLE_PR_REPONAME/pulls/$PR_NUMBER" | jq -r '.title')
              JIRA_STORY=-$(echo $PR_TITLE | cut -d "[" -f2 | cut -d "]" -f1 | tr '[A-Z]' '[a-z]')
              if [ -z "$JIRA_STORY" ]; then echo "Invalid PR title" && exit 1; else echo "Ticket NO: $JIRA_STORY" && JIRA_STORY_DIR=$(echo /jira-story-version); fi
            fi
            sed -i "6s/.*/version: 1.0.0$JIRA_STORY/" helm/dpga-compliance-barebone/Chart.yaml
            cat helm/dpga-compliance-barebone/Chart.yaml
            helm dep up helm/dpga-compliance-barebone
            helm package helm/dpga-compliance-barebone
            helm repo index .
            echo "$CERT_FILE" | base64 --decode > b64encoded.pem
            chmod 400 b64encoded.pem
            ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mkdir -p /apps/apache-tomcat-7.0.82/webapps/ROOT/images$JIRA_STORY_DIR/dpga-barebone$JIRA_STORY
            scp -o StrictHostKeyChecking=No -i b64encoded.pem index.yaml dpga-barebone-1.0.0$JIRA_STORY.tgz ec2-user@13.233.68.128:~/
            ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mv -t /apps/apache-tomcat-7.0.82/webapps/ROOT/images$JIRA_STORY_DIR/dpga-barebone$JIRA_STORY index.yaml dpga-barebone-1.0.0$JIRA_STORY.tgz

  upgrade-dpga-compliance-barebone-chart:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run: |
          if [[ -n $(git show --name-only $CIRCLE_SHA1 | grep "^helm/dpga-compliance-barebone/") ]]; then
            echo "Directory has changed. Running the job."
          else
            echo "Directory has not changed. Skipping the job."
            circleci step halt
          fi
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: "sit"
          aws-region: "$REGION"
      - kubernetes/install-kubectl
      - run: |
          if ! kubectl get ns paymenthub-dpg > /dev/null 2>&1; then
              kubectl create namespace paymenthub-dpg
          fi
      - mifos-orb/docker-image-availability-check-and-upgrade:
          namespace: paymenthub-dpg
          chart-base-url: https://fynarfin.io/images
          chart-name: dpga-barebone
          chart-version: 1.0.0
          #          chart: "https://fynarfin.io/images/dpga-barebone/dpga-barebone-1.0.0.tgz"
          #          add-repo: "https://fynarfin.io/images/dpga-barebone"
          release-name: dpga-release
          cluster-name: "sit"
          aws-region: "$REGION"
          service-file-path: https://raw.githubusercontent.com/openMF/ph-ee-env-labs/master/.circleci/services.txt

  host-g2p-sandbox-fynarfin-demo-chart:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    environment:
      TERM: dumb
    steps:
      - checkout
      - run: |
          if [[ -n $(git show --name-only $CIRCLE_SHA1 | grep "^helm/g2p-sandbox-fynarfin-demo/") ]]; then
            echo "Directory has changed. Running the job."
          else
            echo "Directory has not changed. Skipping the job."
            circleci step halt
          fi
      - run: rm -f helm/g2p-sandbox-fynarfin-demo/Chart.lock helm/g2p-sandbox-fynarfin-demo/charts/*
      - helm/install-helm-client:
          version: "v3.8.2"
      - run:
          name: host-g2p-sandbox-fynarfin-demo
          environment:
            JIRA_STORY: ''
            JIRA_STORY_DIR: ''
          command: |
            if [ "$CIRCLE_BRANCH" != "master" ]; then
              PR_NUMBER=$(basename $CIRCLE_PULL_REQUEST)
              PR_TITLE=$(curl -sSL "https://api.github.com/repos/openmf/$CIRCLE_PR_REPONAME/pulls/$PR_NUMBER" | jq -r '.title')
              JIRA_STORY=-$(echo $PR_TITLE | cut -d "[" -f2 | cut -d "]" -f1 | tr '[A-Z]' '[a-z]')
              if [ -z "$JIRA_STORY" ]; then echo "Invalid PR title" && exit 1; else echo "Ticket NO: $JIRA_STORY" && JIRA_STORY_DIR=$(echo /jira-story-version); fi
            fi
            sed -i "6s/.*/version: 1.0.0$JIRA_STORY/" helm/g2p-sandbox-fynarfin-demo/Chart.yaml
            cat helm/g2p-sandbox-fynarfin-demo/Chart.yaml
            helm dep up helm/g2p-sandbox-fynarfin-demo
            helm package helm/g2p-sandbox-fynarfin-demo
            helm repo index .
            echo "$CERT_FILE" | base64 --decode > b64encoded.pem
            chmod 400 b64encoded.pem
            ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mkdir -p /apps/apache-tomcat-7.0.82/webapps/ROOT/images$JIRA_STORY_DIR/ph-ee-g2psandbox-fynarfin-demo$JIRA_STORY
            scp -o StrictHostKeyChecking=No -i b64encoded.pem index.yaml ph-ee-g2psandbox-fynarfin-demo-1.0.0$JIRA_STORY.tgz ec2-user@13.233.68.128:~/
            ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mv -t /apps/apache-tomcat-7.0.82/webapps/ROOT/images$JIRA_STORY_DIR/ph-ee-g2psandbox-fynarfin-demo$JIRA_STORY index.yaml ph-ee-g2psandbox-fynarfin-demo-1.0.0$JIRA_STORY.tgz

  upgrade-g2p-sandbox-fynarfin-demo-chart:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run: |
          if [[ -n $(git show --name-only $CIRCLE_SHA1 | grep "^helm/g2p-sandbox-fynarfin-demo/") ]]; then
            echo "Directory has changed. Running the job."
          else
            echo "Directory has not changed. Skipping the job."
            circleci step halt
          fi
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: "sit"
          aws-region: "$REGION"
      - kubernetes/install-kubectl
      - run: |
          if ! kubectl get ns paymenthub-demo > /dev/null 2>&1; then
              kubectl create namespace paymenthub-demo
          fi
      - run: "kubectl delete clusterroles `kubectl get clusterroles |grep c-role|cut -d ' ' -f1` || echo ' ' "
      - run: "kubectl delete clusterrolebinding `kubectl get clusterrolebinding |grep c-role|cut -d ' ' -f1` || echo ' ' "
      - mifos-orb/docker-image-availability-check-and-upgrade:
          namespace: paymenthub-demo
          chart-base-url: https://fynarfin.io/images
          chart-name: ph-ee-g2psandbox-fynarfin-demo
          chart-version: 1.0.0
          release-name: g2p-sandbox-demo
          cluster-name: "sit"
          aws-region: "$REGION"
          service-file-path: https://raw.githubusercontent.com/openMF/ph-ee-env-labs/master/.circleci/services.txt

  deploying-bpmns-demo-namespace:
    docker:
      - image: 'cimg/base:2022.06'
    steps:
      - checkout
      - run: 
          name: Directory has change check
          command: |
            if [[ -n $(git show --name-only $CIRCLE_SHA1 | grep "^helm/g2p-sandbox-fynarfin-demo/") ]]; then
              echo "Directory has changed. Running the job."
            else
              echo "Directory has not changed. Skipping the job."
              circleci step halt
            fi
      - run: git clone https://github.com/openmf/ph-ee-env-labs
      - run: echo $AWS_PROFILE
      - run: echo $AWS_DEFAULT_PROFILE
      - run: 
          name: Check for zeebe-ops service
          command: |
            #install netcat
            sudo apt-get update
            sudo apt install -y netcat
            check_count=0
            until ((check_count==12)) || nc -vz ph-ee-zeebe-ops 80; do 
                echo "Waiting for zeebe-ops service"; 
                sleep 5; 
                check_count=$(($check_count + 1));
            done;
            echo ------zeebe-ops service available-----------
      - run: 
          name: Deploy BPMN
          command: |
            cd ph-ee-env-labs
            sed -i 's/zeebeops/zeebeops-demo/g' orchestration/deployBpmn.sh
            sh orchestration/deployBpmn.sh

  create-secret-paymenthub-demo-namespace:
    docker:
      - image: 'cimg/base:2022.06'
    environment:
      TERM: dumb
      NAMESPACE: paymenthub-demo
    steps:
      - setup_remote_docker:
          version: 20.10.14
      - kubernetes/install-kubectl
      - run: git clone https://github.com/openmf/ph-ee-env-labs
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: "sit"
          aws-region: "$REGION"
      - run: |
          cd ph-ee-env-labs
          export ENV_NAMESPACE=$NAMESPACE
          kubectl config use-context arn:aws:eks:$REGION:419830066942:cluster/sit
          kubectl config get-contexts
          cd helm/kibana-secret/
          make secrets || echo "kibana" already exists

      - run: |
          cd ph-ee-env-labs
          export ENV_NAMESPACE=$NAMESPACE
          kubectl config use-context arn:aws:eks:$REGION:419830066942:cluster/sit
          kubectl config get-contexts
          cd helm/es-secret/
          make secrets || echo "elastic-certificates" already exists  

  create-tls-secret-paymenthub-demo-namespace:
    docker:
      - image: 'cimg/base:2022.06'
    environment:
      TERM: dumb
      NAMESPACE: paymenthub-demo
    steps:
      - setup_remote_docker:
          version: 20.10.14
      - kubernetes/install-kubectl
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: "sit"
          aws-region: "$REGION"
      - run: |
          echo "$KEY" | tr '#' '\n' > key.pem
          echo "$SSL_BUNDLE" | tr '#' '\n' > ssl-bundle.crt
          openssl x509 -in ssl-bundle.crt -text -noout
          if kubectl get secret fyn-cert --namespace $NAMESPACE &> /dev/null; then
            echo "Secret fyn-cert already exists. Skipping creation."
          else
            kubectl create secret tls fyn-cert --namespace $NAMESPACE --key=key.pem --cert=ssl-bundle.crt -o yaml
          fi

  test-chart-gov:
    docker:
      - image: cimg/openjdk:17.0.0
    steps:
      - run: git clone https://github.com/openmf/ph-ee-integration-test
      - run: cd ph-ee-integration-test && ./gradlew test -Dcucumber.filter.tags="@gov"
      - store_test_results:
          path: ph-ee-integration-test/build/test-results/test/TEST-org.mifos.integrationtest.TestRunner.xml
  test-chart-ams:
    docker:
      - image: cimg/openjdk:17.0.0
    steps:
      - run: git clone https://github.com/openmf/ph-ee-integration-test
      - run: cd ph-ee-integration-test && ./gradlew test -Dcucumber.filter.tags="@amsIntegration"
      - store_test_results:
          path: ph-ee-integration-test/build/test-results/test/TEST-org.mifos.integrationtest.TestRunner.xml

workflows:
  deploy:
    jobs:
      - build:
          context:
            - AWS
            - Helm
            - slack
      - host-g2-sandbox-security-fynarfin-chart:
          requires:
            - build
          context:
            - AWS
            - Helm
            - slack
      - upgrade-g2psandbox-helm-chart:
          requires:
            - build
            - upgrade-g2psandbox-security-helm-chart
          context:
            - AWS
            - Helm
            - slack
      - upgrade-g2psandbox-security-helm-chart:
          requires:
            - host-g2-sandbox-security-fynarfin-chart
          context:
            - AWS
            - Helm
            - slack
      - host-dpga-compliance-barebone-chart:
          context:
            - AWS
            - Helm
            - slack
      - upgrade-dpga-compliance-barebone-chart:
          requires:
            - host-dpga-compliance-barebone-chart
          context:
            - AWS
            - Helm
            - slack
      - host-g2p-sandbox-fynarfin-demo-chart:
          context:
            - AWS
            - Helm
            - slack
      - upgrade-g2p-sandbox-fynarfin-demo-chart:
          requires:
            - host-g2p-sandbox-fynarfin-demo-chart
          context:
            - AWS
            - Helm
            - slack
      - deploying-bpmns-demo-namespace:
          requires:
            - upgrade-g2p-sandbox-fynarfin-demo-chart
          context:
            - AWS
            - Helm
            - slack
      - create-secret-paymenthub-demo-namespace:
          requires:
            - deploying-bpmns-demo-namespace
          context:
            - AWS
            - Helm
            - slack
            - Secrets
      - create-tls-secret-paymenthub-demo-namespace:
          requires:
            - upgrade-g2p-sandbox-fynarfin-demo-chart
          context:
            - AWS
            - Helm
            - slack
            - Secrets
            - TLS
      # - install-helm-chart:
      #     cluster-name: sit
      # - delete-helm-release:
      #     cluster-name: sit
      #     requires:
      #       - install-helm-chart

  
