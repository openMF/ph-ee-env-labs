version: 2.1
orbs:
  slack: circleci/slack@4.12.5
  helm: circleci/helm@2.0.1
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
jobs:
  build:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    environment:
      TERM: dumb
    steps:
      - checkout
      - run: rm -f helm/g2p-sandbox-fynarfin-SIT/Chart.lock helm/g2p-sandbox-fynarfin-SIT/requirements.lock helm/g2p-sandbox-fynarfin-SIT/charts/*
      - helm/install-helm-client:
          version: "v3.8.2"
      # - run: "sed -i '12s/.*/version: 0.0.0/' helm/g2p-sandbox-fynarfin-SIT/Chart.yaml"
      - run: cat helm/g2p-sandbox-fynarfin-SIT/Chart.yaml
      - run: helm dep up helm/g2p-sandbox-fynarfin-SIT
      - run: helm package helm/g2p-sandbox-fynarfin-SIT
      - run: helm repo index .
      - run: echo "$CERT_FILE" | base64 --decode > b64encoded.pem
      - run: chmod 400 b64encoded.pem
      - run: scp -o StrictHostKeyChecking=No -i b64encoded.pem index.yaml ph-ee-g2psandbox-fynarfin-0.2.0.tgz ec2-user@13.233.68.128:~/
      - run: ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mv -t /apps/apache-tomcat-7.0.82/webapps/ROOT/images/ph-ee-g2psandbox-fynarfin index.yaml ph-ee-g2psandbox-fynarfin-0.2.0.tgz
  
  upgrade-g2psandbox-helm-chart:
    docker:
      - image: cimg/python:3.10
    parameters:
      cluster-name:
        description: "sit"
        type: string        
    steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: "sit"
          aws-region: "$REGION"
      - helm/install-helm-client:
          version: "v3.8.2"
      - run: helm ls --namespace=paymenthub
      - helm/upgrade-helm-chart:
          chart: "https://fynarfin.io/images/ph-ee-g2psandbox-fynarfin/ph-ee-g2psandbox-fynarfin-0.2.0.tgz"
          release-name: "g2p-sandbox"
          namespace: paymenthub
          recreate-pods: true
          add-repo: "https://fynarfin.io/images/ph-ee-g2psandbox-fynarfin"
          wait: true
          timeout: "300s"
      # - run: helm test g2p-sandbox --namespace=paymenthub 
            # reset-values: true
            # dry-run: true
      # - helm/install-helm-chart:
      #     add-repo: "https://fynarfin.io/images/"
      #     chart: "https://fynarfin.io/images/ph-ee-g2psandbox-0.2.0.tgz"
      #     release-name: g2p-sandbox
      #     namespace: ph-test

      # kubectl delete secrets elastic-certificates elastic-certificate-pem elastic-certificate-crt|| true

  create-secret-paymenthub-namespace:
    docker:
      - image: cimg/base:2022.06
    steps:
      - setup_remote_docker:
            version: 20.10.14
      - kubernetes/install-kubectl
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: "sit"
          aws-region: "$REGION"
      - run: |
          export ENV_NAMESPACE=paymenthub
          kubectl config use-context arn:aws:eks:$REGION:419830066942:cluster/sit
          kubectl config get-contexts
          cd helm/kibana-secret/
          make secrets || echo "kibana" already exists

      - run: |
          export ENV_NAMESPACE=paymenthub
          kubectl config use-context arn:aws:eks:$REGION:419830066942:cluster/sit
          kubectl config get-contexts
          cd helm/es-secret/
          make secrets || echo "elastic-certificates" already exists

      - run: |
          export ENV_NAMESPACE=paymenthub
          kubectl delete secret bulk-processor-secret -n $ENV_NAMESPACE || echo "delete the secret if exist"
          kubectl create secret generic bulk-processor-secret \
          --from-literal=aws-access-key="$S3_ACCESS_KEY_ID" \
          --from-literal=aws-secret-key="$S3_SECRET_ACCESS_KEY" -n $ENV_NAMESPACE

  # host-g2-sandbox-security-fynarfin-chart:
  #   docker:
  #     - image: cimg/python:3.10
  #   working_directory: ~/repo
  #   environment:
  #     TERM: dumb
  #   steps:
  #     - checkout
  #     - run: rm -f helm/g2p-sandbox-security-fynarfin-SIT/Chart.lock helm/g2p-sandbox-security-fynarfin-SIT/requirements.lock helm/g2p-sandbox-security-fynarfin-SIT/charts/*
  #     - helm/install-helm-client:
  #         version: "v3.8.2"
  #     - run: cat helm/g2p-sandbox-security-fynarfin-SIT/Chart.yaml
  #     - run: helm dep up helm/g2p-sandbox-security-fynarfin-SIT
  #     - run: helm package helm/g2p-sandbox-security-fynarfin-SIT
  #     - run: helm repo index .
  #     - run: echo "$CERT_FILE" | base64 --decode > b64encoded.pem
  #     - run: chmod 400 b64encoded.pem
  #     - run: ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mkdir -p /apps/apache-tomcat-7.0.82/webapps/ROOT/images/ph-ee-g2psandbox-security-fynarfin
  #     - run: scp -o StrictHostKeyChecking=No -i b64encoded.pem index.yaml ph-ee-g2psandbox-security-fynarfin-0.0.0.tgz ec2-user@13.233.68.128:~/
  #     - run: ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mv -t /apps/apache-tomcat-7.0.82/webapps/ROOT/images/ph-ee-g2psandbox-security-fynarfin index.yaml ph-ee-g2psandbox-security-fynarfin-0.0.0.tgz

  # upgrade-g2psandbox-security-helm-chart:
  #   docker:
  #     - image: cimg/python:3.10
  #   parameters:
  #     cluster-name:
  #       description: "sit"
  #       type: string        
  #   steps:
  #     - aws-eks/update-kubeconfig-with-authenticator:
  #         cluster-name: "sit"
  #         aws-region: "$REGION"
  #     - helm/install-helm-client:
  #         version: "v3.8.2"
  #     - kubernetes/install-kubectl
  #     - run: |
  #         if ! kubectl get ns ph-infrastructure > /dev/null 2>&1; then
  #             kubectl create namespace ph-infrastructure
  #         fi
  #     - run: helm ls --namespace=ph-infrastructure
  #     - helm/upgrade-helm-chart:
  #         chart: "https://fynarfin.io/images/ph-ee-g2psandbox-security-fynarfin/ph-ee-g2psandbox-security-fynarfin-0.0.0.tgz"
  #         release-name: "g2p-sandbox-security"
  #         namespace: ph-infrastructure
  #         recreate-pods: true
  #         add-repo: "https://fynarfin.io/images/ph-ee-g2psandbox-security"
  #         wait: true
  #         timeout: "300s"     
                                       
  deploying-bpmns:
    docker:
      - image: 'curlimages/curl:8.1.2' 
    steps:
      - checkout
      - run: echo $AWS_PROFILE
      - run: echo $AWS_DEFAULT_PROFILE
      - run: sh orchestration/deployBpmn.sh

  test-chart-gov:
    docker:
      - image: cimg/openjdk:17.0.0
    steps:
      - run: git clone https://github.com/openmf/ph-ee-integration-test
      - run: cd ph-ee-integration-test && ./gradlew test -Dcucumber.filter.tags="@gov" 
      - store_test_results:
          path: ph-ee-integration-test/build/test-results/test/TEST-org.mifos.integrationtest.TestRunner.xml
  test-chart-ams:
    docker:
      - image: cimg/openjdk:17.0.0
    steps:
      - run: git clone https://github.com/openmf/ph-ee-integration-test
      - run: cd ph-ee-integration-test && ./gradlew test -Dcucumber.filter.tags="@amsIntegration"
      - store_test_results:
          path: ph-ee-integration-test/build/test-results/test/TEST-org.mifos.integrationtest.TestRunner.xml

workflows:
  deploy:
    jobs:
      - build:
          context: 
            - AWS
            - Helm
            - slack
      # - host-g2-sandbox-security-fynarfin-chart:
      #     requires:
      #       - build
      #     context:
      #       - AWS
      #       - Helm
      #       - slack
      - upgrade-g2psandbox-helm-chart:
          cluster-name: sit
          requires:
            - build
            # - upgrade-g2psandbox-security-helm-chart
          context:
            - AWS
            - Helm
            - slack
            - Secrets        
      - create-secret-paymenthub-namespace:
          requires: 
            - upgrade-g2psandbox-helm-chart
          context: 
            - AWS
            - Helm
            - slack
            - Secrets  
      # - upgrade-g2psandbox-security-helm-chart:
      #     cluster-name: sit
      #     requires:
      #       - host-g2-sandbox-security-fynarfin-chart
      #     context:
      #       - AWS
      #       - Helm
      #       - slack
      #       - Secrets 
      - deploying-bpmns:
          requires:
            - upgrade-g2psandbox-helm-chart
          context: 
            - AWS
            - Helm
            - slack
      - test-chart-gov:
          requires:
            - create-secret-paymenthub-namespace
            - deploying-bpmns
          context: 
            - AWS
            - Helm
            - slack
      - test-chart-ams:
          requires:
            - create-secret-paymenthub-namespace
            - deploying-bpmns
          context:
            - AWS
            - Helm
            - slack

      # - install-helm-chart:
      #     cluster-name: sit
      # - delete-helm-release:
      #     cluster-name: sit
      #     requires:
      #       - install-helm-chart

  
